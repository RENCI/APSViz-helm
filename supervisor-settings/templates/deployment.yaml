{{- $store_name := .Values.database.store_name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apsviz-settings.fullname" . }}
  labels:
    {{- include "apsviz-settings.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "apsviz-settings.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "apsviz-settings.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: {{ .Values.database.db_name_index }}
            valueFrom:
              secretKeyRef:
                name: {{ $store_name }}
                key: {{ .Values.database.db_name }}

          - name: {{ .Values.database.db_host_index }}
            valueFrom:
              secretKeyRef:
                name: {{ $store_name }}
                key: {{ .Values.database.db_host }}

          - name: {{ .Values.database.db_port_index }}
            valueFrom:
              secretKeyRef:
                name: {{ $store_name }}
                key: {{ .Values.database.db_port }}

          - name: {{ .Values.database.db_username_index }}
            valueFrom:
              secretKeyRef:
                name: {{ $store_name }}
                key: {{ .Values.database.db_username }}

          - name: {{ .Values.database.db_password_index }}
            valueFrom:
              secretKeyRef:
                name: {{ $store_name }}
                key: {{ .Values.database.db_password }}

          - name: LOG_PATH
            valueFrom:
              secretKeyRef:
                name: eds-keys
                key: log-path

          volumeMounts:
            - name:  {{ .Values.volumes.name }}
              mountPath: "/data"
          command:
            - 'uvicorn'
          args:
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "{{ .Values.service.containerPort }}"
            - "--workers"
            - "4"
            - "src.server:APP"
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: {{ .Values.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.claimname }}
    {{- with .Values.nodeSelector}}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
