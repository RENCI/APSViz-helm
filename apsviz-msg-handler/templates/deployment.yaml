# SPDX-FileCopyrightText: 2022 Renaissance Computing Institute. All rights reserved.
# SPDX-FileCopyrightText: 2023 Renaissance Computing Institute. All rights reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-License-Identifier: LicenseRef-RENCI
# SPDX-License-Identifier: MIT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apsviz-msg-handler.fullname" . }}
  labels:
    {{- include "apsviz-msg-handler.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "apsviz-msg-handler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "apsviz-msg-handler.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "apsviz-msg-handler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "SYSTEM"
              value: "{{ .Values.env.system }}"
            - name: "RABBITMQ_HOST"
              value: "{{ .Values.env.RABBITMQ_HOST }}"
            - name: "RABBITMQ_USER"
              value: "{{ .Values.env.RABBITMQ_USER }}"
            - name: "RABBITMQ_PW"
              value: "{{ .Values.env.RABBITMQ_PW }}"
            - name: RELAY_RABBITMQ_HOST
              value: "{{ .Values.env.RELAY_RABBITMQ_HOST }}"
            - name: RELAY_RABBITMQ_PW
              value: "{{ .Values.env.RELAY_RABBITMQ_PW }}"
            - name: RELAY_RABBITMQ_USER
              value: "{{ .Values.env.RELAY_RABBITMQ_USER }}"
            - name: RELAY_ENABLED
              value: "{{ .Values.env.RELAY_ENABLED }}"
            - name: LOG_PATH
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: log-path
            - name: LOG_LEVEL
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: log-level
            - name: ASGS_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: asgs-host
            - name: ASGS_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: asgs-port
            - name: ASGS_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: asgs-database
            - name: ASGS_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: asgs-username
            - name: ASGS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: asgs-password
            - name: SLACK_ISSUES_TOKEN
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: slack-issues-token
            - name: SLACK_ISSUES_CHANNEL
              valueFrom:
                secretKeyRef:
                  name: eds-keys
                  key: slack-issues-channel

            - name: ECFLOW_RT_QUEUE_NAME
              value: "{{ .Values.queues.ecflow_rt }}"
            - name: ECFLOW_RP_QUEUE_NAME
              value: "{{ .Values.queues.ecflow_rp }}"
            - name: ASGS_RT_QUEUE_NAME
              value: "{{ .Values.queues.asgs_queue }}"
            - name: ASGS_RP_QUEUE_NAME
              value: "{{ .Values.queues.asgs_props }}"
            - name: HECRAS_RP_QUEUE_NAME
              value: "{{ .Values.queues.hecras_rp }}"

          command: [ "/bin/bash", "-c"]
          args: ["/repo/message/startup.sh {{ .Values.env.sleepTimeSeconds }}"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.volumes.name }}
              mountPath: {{ .Values.volumes.mountPath }}
      volumes:
        - name: {{ .Values.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.claimName }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
