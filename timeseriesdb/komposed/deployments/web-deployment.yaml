apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.7.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - args:
        - bash
        - -c
        - python manage.py collectstatic --no-input --clear && python manage.py makemigrations
          --noinput && python manage.py migrate --no-input &&  gunicorn apsviz_gauges.wsgi:application
          --bind 0.0.0.0:8000
        env:
        - name: DATABASE
          valueFrom:
            configMapKeyRef:
              key: DATABASE
              name: web-env
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: web-env
        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: DJANGO_ALLOWED_HOSTS
              name: web-env
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: web-env
        - name: SQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: SQL_DATABASE
              name: web-env
        - name: SQL_ENGINE
          valueFrom:
            configMapKeyRef:
              key: SQL_ENGINE
              name: web-env
        - name: SQL_HOST
          valueFrom:
            configMapKeyRef:
              key: SQL_HOST
              name: web-env
        - name: SQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: SQL_PASSWORD
              name: web-env
        - name: SQL_PORT
          valueFrom:
            configMapKeyRef:
              key: SQL_PORT
              name: web-env
        - name: SQL_USER
          valueFrom:
            configMapKeyRef:
              key: SQL_USER
              name: web-env
        image: containers.renci.org/eds/apsviz-timeseriesdb_web:latest
        name: web
        resources: {}
        volumeMounts:
        - mountPath: /home/django/web/staticfiles
          name: static-volume
        - mountPath: /home/django/web/mediafiles
          name: media-volume
      restartPolicy: Always
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-volume
status: {}
